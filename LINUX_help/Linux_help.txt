Как устанавливать софт на linux

1. Расширение .deb
.deb – это формат установочного пакета, используемый всеми дистрибутивами на базе Debian. Пакеты Deb могут быть установлены и удалены с помощью командной строки или графического менеджера пакетов.

Установка deb-пакетов из командной строки
Чтобы установить .deb пакеты из командной строки, можно использовать утилиты 'apt', 'dpkg'.

APT (Advanced Package Tool) – это интерфейс командной строки для системы управления пакетами. Он был введен в Ubuntu 14.04 и объединяет наиболее часто используемые команды 'apt-get'

Чтобы установить локальные пакеты deb, apt вам необходимо предоставить полный путь к пакету deb. Если пакет находится в вашем текущем рабочем каталоге вместо того, чтобы использовать абсолютный путь, вы можете добавить ./ перед именем пакета. В противном случае apt попытается извлечь и установить пакет из репозиториев Ubuntu.

$ sudo apt install ./your_app.deb


'dpkg' является менеджером пакетов низкого уровня для систем на базе Debian. Используйте опцию -i (или --install) для установки пакетов .deb 'dpkg'

$ sudo dpkg -i your_app.deb


2. Расширение tar.gz
tar.gz это еще не программа, это архив. Архив исходных кодов программы, и если говорить простыми словами, то это набор текстовых файлов с инструкциями на определенном языке программирования.
Чтобы все это превратилось в готовую к установке и выполнению программу нужно выполнить сборку (компиляцию)

ПОДГОТОВКА СИСТЕМЫ
Готовить почти нечего, компилятор GCC уже предустановлен в системе, и уже можно переходить к сборке. Но мы хотим не просто установить программу, а так чтобы ею потом можно было управлять с помощью пакетного менеджера, например, при удалении полностью стереть все ее файлы, не оставляя мусора в системе. Поэтому придется установить дополнительные утилиты для создания и сборки пакетов Ubuntu.

Наберите следующую команду для установки этих инструментов:

$  sudo apt-get install checkinstall build-essential  autoconf automake

УСТАНОВКА ИЗ TAR GZ В UBUNTU
Теперь можно переходить к сборке программы и установке tar.gz Ubuntu. Неважно в какой папке будет находиться архив, главное, чтобы вы знали где. Первой командой, которую мы выполним будет переход в папку с архивом:

$ cd ~/путь_к_папке_с_архивом

Дальше извлечем исходники из архива с программой:

$  tar -xvf имя_архива.tar.gz

И переходим в папку с только что полученными исходными файлами:
$  cd ./имя_архива

Обычно программы в Linux состоят из большого количества файлов, и при их сборке нужны различные параметры и опции, поэтому вместо того, чтобы запускать компилятор для каждого из файлов вручную, в Linux используется утилита make. Она на основе файла Makefile подбирает правильные команды компиляции для каждого файла и собирает всю программу.

Программы часто используют внешние библиотеки, а в разных дистрибутивах путь к файлам библиотек разный, поэтому перед тем, как запускать make нужно выполнить скрипт configure для проверки зависимостей. Этот скрипт можно создать на основе файла configure.in. Но это необязательно, во многих программах скрипт конфигурации не предусмотрен и программа не требует проверки зависимостей перед сборкой, тогда файла configure.in просто нет в папке с исходниками. Если так, то просто пропустите следующие инструкции и переходите к сборке.

Configure можно создать несколькими способами, сначала попытаемся выполнить следующие скрипты:

$ ./bootstrap

$./autogen.sh

Если же этих скриптов не оказалось в исходниках, просто последовательно выполните следующие команды:
$ aclocal
$ autoheader
$ automake --gnu --add-missing --copy --foreign
$ autoconf -f -Wall

Если все прошло успешно установка из исходников Ubuntu может быть продолжена. Теперь, наверное, самое сложное, запускаем configure:

$  ./configure

Если скрипт обнаружит что какой-то библиотеки нет (File имя_файла_библиотеки.so not found), скомпилировать пакет не получится, берем название библиотеки и ищем в Google как называется ее пакет в Ubuntu, а затем устанавливаем его через  apt-get. Обычно это libимя_библиотеки или libимя_библиотеки-dev.

Например, нам не хватало libfuse.so. С помощью поисковой системы мы узнали, что эта библиотека есть в пакете libfuse. Теперь просто ее установим:

 $ sudo apt install libfuse

Затем опять выполняете configure, чтобы посмотреть нет ли других неразрешенных зависимостей. И повторяете все до тех пор, пока не увидите слово Sucessful или Complete в конце вывода скрипта.

И только теперь установка tar.gz в Ubuntu может быть продолжена и программа собрана. Команда make скомпилирует программу из исходников, а скрипт checkinstall соберет deb пакет:

$  make

Самое сложное уже позади, на этом этапе ошибки почти никогда не возникают

$ checkinstall

И только теперь мы получили программу, которую можно устанавливать с помощью центра приложений или в терминале. Установка с помощью dpkg будет выглядеть вот так:

$  dpkg -i имя_программы.deb
